<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 默认生成的的sql，不要修改！！！ -->
<mapper namespace="org.xi.quick.sys.mapper.UserRoleMapper">

    <resultMap id="BaseResultMap" type="org.xi.quick.sys.models.entity.UserRoleEntity">
        <result property="userId" column="user_id"/>
        <result property="roleId" column="role_id"/>
    </resultMap>

    <parameterMap id="BaseParameterMap" type="org.xi.quick.sys.models.entity.UserRoleEntity"></parameterMap>
    <parameterMap id="BaseConditionMap" type="org.xi.quick.sys.models.condition.UserRoleCondition"></parameterMap>

    <sql id="tableName">`sys_user_role`</sql>
    <sql id="selectCondition">
        <trim prefixOverrides="AND|OR">
                <if test="condition.userId != null">
                    AND `user_id` = #{condition.userId}
                </if>
                <if test="condition.userIdList != null and condition.userIdList.size() > 0">
                    AND `user_id` in
                    <foreach collection="condition.userIdList" item="it" open="(" close=")" separator=",">#{it}</foreach>
                </if>
                <if test="condition.userIdMin != null">
                    <![CDATA[
                    AND `user_id` >= #{condition.userIdMin}
                    ]]>
                </if>
                <if test="condition.userIdMax != null">
                    <![CDATA[
                    AND `user_id` <= #{condition.userIdMax}
                    ]]>
                </if>
                <if test="condition.roleId != null">
                    AND `role_id` = #{condition.roleId}
                </if>
                <if test="condition.roleIdList != null and condition.roleIdList.size() > 0">
                    AND `role_id` in
                    <foreach collection="condition.roleIdList" item="it" open="(" close=")" separator=",">#{it}</foreach>
                </if>
                <if test="condition.roleIdMin != null">
                    <![CDATA[
                    AND `role_id` >= #{condition.roleIdMin}
                    ]]>
                </if>
                <if test="condition.roleIdMax != null">
                    <![CDATA[
                    AND `role_id` <= #{condition.roleIdMax}
                    ]]>
                </if>
        </trim>
    </sql>

    <sql id="where">
        <if test="condition != null">
            <where>
                <include refid="selectCondition"/>
            </where>
        </if>
    </sql>
    <sql id="listWhere">
        <if test="conditionList != null and conditionList.size() > 0">
            <where>
                <foreach collection="conditionList" item="condition" open="(" close=")" separator=" OR ">
                    (<include refid="selectCondition"/>)
                </foreach>
            </where>
        </if>
    </sql>
    <sql id="orderBy">
        <if test="order != null">
            <trim suffixOverrides="ORDER BY">
                ORDER BY
                <trim suffixOverrides=",">
                <if test="order.userIdSort != null">
                    <choose>
                        <when test="order.userIdSort == @org.xi.quick.common.constant.SortConstants@ASC">
                            `user_id` ASC,
                        </when>
                        <otherwise>
                            `user_id` DESC,
                        </otherwise>
                    </choose>
                </if>
                <if test="order.roleIdSort != null">
                    <choose>
                        <when test="order.roleIdSort == @org.xi.quick.common.constant.SortConstants@ASC">
                            `role_id` ASC,
                        </when>
                        <otherwise>
                            `role_id` DESC,
                        </otherwise>
                    </choose>
                </if>
                </trim>
            </trim>
        </if>
    </sql>
    <sql id="selectColumnList">
        `user_id`,
        `role_id`
    </sql>
    <sql id="updateColumnSet">
        <set>
            <if test="entity.userId != null">
                `user_id` = #{entity.userId},
            </if>
            <if test="entity.roleId != null">
                `role_id` = #{entity.roleId}
            </if>
        </set>
    </sql>

    <insert id="insert" parameterMap="BaseParameterMap">
        insert into <include refid="tableName"/>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="entity.userId != null">`user_id`,</if>
            <if test="entity.roleId != null">`role_id`,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="entity.userId != null">#{entity.userId},</if>
            <if test="entity.roleId != null">#{entity.roleId},</if>
        </trim>
    </insert>

    <insert id="insertList" parameterMap="BaseParameterMap">
        <foreach collection="list" item="item" separator=";">
            insert into <include refid="tableName"/>
            <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="item.userId != null">`user_id`,</if>
                <if test="item.roleId != null">`role_id`,</if>
            </trim>
            <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="item.userId != null">#{item.userId},</if>
                <if test="item.roleId != null">#{item.roleId},</if>
            </trim>
        </foreach>
    </insert>

    <delete id="deleteByCondition" parameterMap="BaseConditionMap">
        DELETE FROM <include refid="tableName"/>
        <include refid="where"/>
    </delete>

    <delete id="deleteByConditionList" parameterMap="BaseConditionMap">
        DELETE FROM <include refid="tableName"/>
        <include refid="listWhere"/>
    </delete>

    <update id="updateByCondition">
        UPDATE <include refid="tableName"/>
        <include refid="updateColumnSet"/>
        <include refid="where"/>
    </update>

    <update id="updateByConditionList">
        UPDATE <include refid="tableName"/>
        <include refid="updateColumnSet"/>
        <include refid="listWhere"/>
    </update>

    <select id="getByCondition" resultMap="BaseResultMap" parameterMap="BaseConditionMap">
        SELECT
        <include refid="selectColumnList"/>
        FROM
        <include refid="tableName"/>
        <include refid="where"/>
    </select>

    <select id="selectByCondition" resultMap="BaseResultMap">
        SELECT
        <include refid="selectColumnList"/>
        FROM
        <include refid="tableName"/>
        <include refid="where"/>
        <include refid="orderBy"/>
    </select>

    <select id="selectByConditionList" resultMap="BaseResultMap">
        SELECT
        <include refid="selectColumnList"/>
        FROM
        <include refid="tableName"/>
        <include refid="listWhere"/>
        <include refid="orderBy"/>
    </select>

    <select id="countByCondition" parameterMap="BaseConditionMap" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM <include refid="tableName"/>
        <include refid="where"/>
    </select>

    <select id="countByConditionList" parameterMap="BaseConditionMap" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM <include refid="tableName"/>
        <include refid="listWhere"/>
    </select>
</mapper>
