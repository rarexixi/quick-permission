<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 存放手写的sql -->
<mapper namespace="org.xi.quick.sys.mapper.RoleMapper">

    <resultMap id="ExtensionResultMap" extends="BaseResultMap" type="org.xi.quick.sys.models.entity.extension.RoleEntityExtension">
        <result property="builtInText" column="built_in_text"/>
    </resultMap>

    <parameterMap id="ConditionExtensionMap" type="org.xi.quick.sys.models.condition.extension.RoleConditionExtension"></parameterMap>

    <select id="getByPk" resultMap="ExtensionResultMap">
        SELECT DISTINCT
        MT.`role_id`,
        MT.`role_code`,
        MT.`role_name`,
        MT.`built_in`,
        MT.`remark`,
        MT.`deleted`,
        MT.`create_user`,
        MT.`update_user`,
        MT.`create_time`,
        MT.`update_time`
        FROM
        <include refid="tableName"/> MT
        <where>
        MT.`role_id` = #{roleId}
        </where>
    </select>

    <select id="getMenuPermissionIdsByRoleId" resultType="java.lang.Integer" parameterType="java.lang.Integer">
        SELECT DISTINCT `permission_id` FROM `sys_role_menu` T1 JOIN `sys_menu_permission` T2 ON T1.`menu_id` = T2.`menu_id`
        WHERE T1.`role_id` = #{roleId}
    </select>

    <select id="getMenuPermissionIdsByRoleIds" resultType="java.lang.Integer" parameterType="java.util.List">
        SELECT DISTINCT `permission_id` FROM `sys_role_menu` T1 JOIN `sys_menu_permission` T2 ON T1.`menu_id` = T2.`menu_id`
        WHERE T1.`role_id` IN
        <foreach collection="roleIds" item="it" open="(" close=")" separator=",">#{it}</foreach>
    </select>

    <select id="getPermissionIdsByRoleId" resultType="java.lang.Integer" parameterType="java.lang.Integer">
        SELECT DISTINCT `permission_id` FROM `sys_role_permission` WHERE `role_id` = #{roleId}
        UNION
        SELECT DISTINCT `permission_id` FROM `sys_role_menu` T1 JOIN `sys_menu_permission` T2 ON T1.`menu_id` = T2.`menu_id`
        WHERE T1.`role_id` = #{roleId}
    </select>

    <select id="getPermissionIdsByRoleIds" resultType="java.lang.Integer" parameterType="java.util.List">
        SELECT DISTINCT `permission_id` FROM `sys_role_permission` WHERE `role_id` IN
        <foreach collection="roleIds" item="it" open="(" close=")" separator=",">#{it}</foreach>
        UNION
        SELECT DISTINCT `permission_id` FROM `sys_role_menu` T1 JOIN `sys_menu_permission` T2 ON T1.`menu_id` = T2.`menu_id`
        WHERE T1.`role_id` IN
        <foreach collection="roleIds" item="it" open="(" close=")" separator=",">#{it}</foreach>
    </select>

    <select id="getPermissionsByRoleId" resultType="java.lang.String" parameterType="java.lang.Integer">
        SELECT DISTINCT
        T.`permission_code`
        FROM
        `sys_permission` T
        JOIN (
            SELECT DISTINCT `permission_id` FROM `sys_role_permission` WHERE `role_id` = #{roleId}
            UNION
            SELECT DISTINCT `permission_id` FROM `sys_role_menu` T1 JOIN `sys_menu_permission` T2 ON T1.`menu_id` = T2.`menu_id`
            WHERE T1.`role_id` = #{roleId}
        ) T1 ON T1.`permission_id` = T.`permission_id`
        <where>
            T.`type` = 1 and T.`deleted` = 0
        </where>
    </select>

    <select id="getPermissionsByRoleIds" resultType="java.lang.String" parameterType="java.util.List">
        SELECT DISTINCT
        T.`permission_code`
        FROM
        `sys_permission` T
        JOIN (
            SELECT DISTINCT `permission_id` FROM `sys_role_permission` WHERE `role_id` IN
            <foreach collection="roleIds" item="it" open="(" close=")" separator=",">#{it}</foreach>
            UNION
            SELECT DISTINCT `permission_id` FROM `sys_role_menu` T1 JOIN `sys_menu_permission` T2 ON T1.`menu_id` = T2.`menu_id`
            WHERE T1.`role_id` IN
            <foreach collection="roleIds" item="it" open="(" close=")" separator=",">#{it}</foreach>
        ) T1 ON T1.`permission_id` = T.`permission_id`
        <where>
            T.`deleted` = 0
        </where>
    </select>

    <select id="getExList" resultMap="ExtensionResultMap" parameterMap="ConditionExtensionMap">
        SELECT DISTINCT
        MT.`role_id`,
        MT.`role_code`,
        MT.`role_name`,
        MT.`built_in`,
        MT.`remark`,
        MT.`deleted`,
        MT.`create_user`,
        MT.`update_user`,
        MT.`create_time`,
        MT.`update_time`
        FROM
        <include refid="tableName"/> MT
        <where>
            <if test="condition.roleId != null">
                AND MT.`role_id` = #{condition.roleId}
            </if>
            <if test="condition.roleIdList != null and condition.roleIdList.size() > 0">
                AND MT.`role_id` in
                <foreach collection="condition.roleIdList" item="it" open="(" close=")" separator=",">#{it}</foreach>
            </if>
            <if test="condition.roleIdMin != null">
                <![CDATA[
                AND MT.`role_id` >= #{condition.roleIdMin}
                ]]>
            </if>
            <if test="condition.roleIdMax != null">
                <![CDATA[
                AND MT.`role_id` <= #{condition.roleIdMax}
                ]]>
            </if>
            <if test="condition.roleCode != null and condition.roleCode != ''">
                AND MT.`role_code` = #{condition.roleCode}
            </if>
            <if test="condition.roleCodeList != null and condition.roleCodeList.size() > 0">
                AND MT.`role_code` in
                <foreach collection="condition.roleCodeList" item="it" open="(" close=")" separator=",">#{it}</foreach>
            </if>
            <if test="condition.roleCodeIsEmpty != null and condition.roleCodeIsEmpty == true">
                AND MT.`role_code` = ''
            </if>
            <if test="condition.roleCodeStartWith != null and condition.roleCodeStartWith != ''">
                AND MT.`role_code` LIKE concat(#{condition.roleCodeStartWith}, '%')
            </if>
            <if test="condition.roleCodeContains != null and condition.roleCodeContains != ''">
                AND MT.`role_code` LIKE concat('%', #{condition.roleCodeContains}, '%')
            </if>
            <if test="condition.roleName != null and condition.roleName != ''">
                AND MT.`role_name` = #{condition.roleName}
            </if>
            <if test="condition.roleNameList != null and condition.roleNameList.size() > 0">
                AND MT.`role_name` in
                <foreach collection="condition.roleNameList" item="it" open="(" close=")" separator=",">#{it}</foreach>
            </if>
            <if test="condition.roleNameIsEmpty != null and condition.roleNameIsEmpty == true">
                AND MT.`role_name` = ''
            </if>
            <if test="condition.roleNameStartWith != null and condition.roleNameStartWith != ''">
                AND MT.`role_name` LIKE concat(#{condition.roleNameStartWith}, '%')
            </if>
            <if test="condition.roleNameContains != null and condition.roleNameContains != ''">
                AND MT.`role_name` LIKE concat('%', #{condition.roleNameContains}, '%')
            </if>
            <if test="condition.builtIn != null">
                AND MT.`built_in` = #{condition.builtIn}
            </if>
            <if test="condition.builtInList != null and condition.builtInList.size() > 0">
                AND MT.`built_in` in
                <foreach collection="condition.builtInList" item="it" open="(" close=")" separator=",">#{it}</foreach>
            </if>
            <if test="condition.builtInMin != null">
                <![CDATA[
                AND MT.`built_in` >= #{condition.builtInMin}
                ]]>
            </if>
            <if test="condition.builtInMax != null">
                <![CDATA[
                AND MT.`built_in` <= #{condition.builtInMax}
                ]]>
            </if>
            <if test="condition.deleted != null">
                AND MT.`deleted` = #{condition.deleted}
            </if>
            <if test="condition.createUser != null">
                AND MT.`create_user` = #{condition.createUser}
            </if>
            <if test="condition.createUserList != null and condition.createUserList.size() > 0">
                AND MT.`create_user` in
                <foreach collection="condition.createUserList" item="it" open="(" close=")" separator=",">#{it}</foreach>
            </if>
            <if test="condition.createUserMin != null">
                <![CDATA[
                AND MT.`create_user` >= #{condition.createUserMin}
                ]]>
            </if>
            <if test="condition.createUserMax != null">
                <![CDATA[
                AND MT.`create_user` <= #{condition.createUserMax}
                ]]>
            </if>
            <if test="condition.updateUser != null">
                AND MT.`update_user` = #{condition.updateUser}
            </if>
            <if test="condition.updateUserList != null and condition.updateUserList.size() > 0">
                AND MT.`update_user` in
                <foreach collection="condition.updateUserList" item="it" open="(" close=")" separator=",">#{it}</foreach>
            </if>
            <if test="condition.updateUserMin != null">
                <![CDATA[
                AND MT.`update_user` >= #{condition.updateUserMin}
                ]]>
            </if>
            <if test="condition.updateUserMax != null">
                <![CDATA[
                AND MT.`update_user` <= #{condition.updateUserMax}
                ]]>
            </if>
            <if test="condition.createTimeList != null and condition.createTimeList.size() > 0">
                AND MT.`create_time` in
                <foreach collection="condition.createTimeList" item="it" open="(" close=")" separator=",">#{it}</foreach>
            </if>
            <if test="condition.createTimeMin != null">
                <![CDATA[
                AND MT.`create_time` >= #{condition.createTimeMin}
                ]]>
            </if>
            <if test="condition.createTimeMax != null">
                <![CDATA[
                AND MT.`create_time` <= #{condition.createTimeMax}
                ]]>
            </if>
            <if test="condition.updateTimeList != null and condition.updateTimeList.size() > 0">
                AND MT.`update_time` in
                <foreach collection="condition.updateTimeList" item="it" open="(" close=")" separator=",">#{it}</foreach>
            </if>
            <if test="condition.updateTimeMin != null">
                <![CDATA[
                AND MT.`update_time` >= #{condition.updateTimeMin}
                ]]>
            </if>
            <if test="condition.updateTimeMax != null">
                <![CDATA[
                AND MT.`update_time` <= #{condition.updateTimeMax}
                ]]>
            </if>
        </where>
        <if test="order != null">
            <trim suffixOverrides="ORDER BY">
                ORDER BY
                <trim suffixOverrides=",">
                <if test="order.roleIdSort != null">
                    <choose>
                        <when test="order.roleIdSort == @org.xi.quick.common.constant.SortConstants@ASC">
                            MT.`role_id` ASC,
                        </when>
                        <otherwise>
                            MT.`role_id` DESC,
                        </otherwise>
                    </choose>
                </if>
                <if test="order.roleCodeSort != null">
                    <choose>
                        <when test="order.roleCodeSort == @org.xi.quick.common.constant.SortConstants@ASC">
                            MT.`role_code` ASC,
                        </when>
                        <otherwise>
                            MT.`role_code` DESC,
                        </otherwise>
                    </choose>
                </if>
                <if test="order.roleNameSort != null">
                    <choose>
                        <when test="order.roleNameSort == @org.xi.quick.common.constant.SortConstants@ASC">
                            MT.`role_name` ASC,
                        </when>
                        <otherwise>
                            MT.`role_name` DESC,
                        </otherwise>
                    </choose>
                </if>
                <if test="order.builtInSort != null">
                    <choose>
                        <when test="order.builtInSort == @org.xi.quick.common.constant.SortConstants@ASC">
                            MT.`built_in` ASC,
                        </when>
                        <otherwise>
                            MT.`built_in` DESC,
                        </otherwise>
                    </choose>
                </if>
                <if test="order.deletedSort != null">
                    <choose>
                        <when test="order.deletedSort == @org.xi.quick.common.constant.SortConstants@ASC">
                            MT.`deleted` ASC,
                        </when>
                        <otherwise>
                            MT.`deleted` DESC,
                        </otherwise>
                    </choose>
                </if>
                <if test="order.createUserSort != null">
                    <choose>
                        <when test="order.createUserSort == @org.xi.quick.common.constant.SortConstants@ASC">
                            MT.`create_user` ASC,
                        </when>
                        <otherwise>
                            MT.`create_user` DESC,
                        </otherwise>
                    </choose>
                </if>
                <if test="order.updateUserSort != null">
                    <choose>
                        <when test="order.updateUserSort == @org.xi.quick.common.constant.SortConstants@ASC">
                            MT.`update_user` ASC,
                        </when>
                        <otherwise>
                            MT.`update_user` DESC,
                        </otherwise>
                    </choose>
                </if>
                <if test="order.createTimeSort != null">
                    <choose>
                        <when test="order.createTimeSort == @org.xi.quick.common.constant.SortConstants@ASC">
                            MT.`create_time` ASC,
                        </when>
                        <otherwise>
                            MT.`create_time` DESC,
                        </otherwise>
                    </choose>
                </if>
                <if test="order.updateTimeSort != null">
                    <choose>
                        <when test="order.updateTimeSort == @org.xi.quick.common.constant.SortConstants@ASC">
                            MT.`update_time` ASC,
                        </when>
                        <otherwise>
                            MT.`update_time` DESC,
                        </otherwise>
                    </choose>
                </if>
                </trim>
            </trim>
        </if>
    </select>
</mapper>
